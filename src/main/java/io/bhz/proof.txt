i0 = 0
i1 = i0 + k
i2 = i1 + k
....
ix = xk
на какой итерации мы вернемся в ноль пройдя ровно 1 раз? => x мы ищем минимальный при котором это выполнится.
если х будет не минимальным при котором оно выполняется, то значит мы уже прошли необходимое условие

(x * k) % n == 0
x * k = m * n
x = m * n / k

x целое и x < n, так как один элемент мы трогаем единожды

если gcd(n, k) = 1 => m / k => m = k тк иначе будет 2 прохода по массиву с одинаковыми элементами и получистя уже сдвиг на 2
    например m = 2k, тогда x = 2k * n / k = 2n
если gcd(n, k) = d => x = d
    тк какое минимальное число нужно умножить на n, чтобы результат делился нацело на k и не превосходил n? недостающую часть - k // d.
        ((k // d) * n) / k, а это равно gcd(n, k) = x